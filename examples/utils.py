from casados_integrator import CasadosIntegrator
from acados_template import AcadosSim
from casadi import *
from datetime import datetime

def date_to_string():

    now = datetime.now()

    return now.strftime("%Y%m%d%H%M%S")


def create_casados_integrator(model, integrator_opts, dt=0.1, use_cython=True, integrator_type="IRK", code_reuse=False):
    sim = AcadosSim()
    sim.model = model

    # set simulation time
    sim.solver_options.T = dt

    # set options

    sim.solver_options.sens_forw = True
    sim.solver_options.sens_algebraic = False
    sim.solver_options.sens_hess = True
    sim.solver_options.sens_adj = True
    # if integrator_opts["type"] == "implicit":
    if integrator_type == "GNSF":
        sim.solver_options.integrator_type = "GNSF"
        sim.solver_options.sens_hess = False
    elif integrator_type == "RK4":
        sim.solver_options.integrator_type = "ERK"
    else:
        sim.solver_options.integrator_type = "IRK"
    # elif integrator_opts["type"] == "explicit":
    #     sim.solver_options.integrator_type = "ERK"
    # else:
    #     raise Exception("integrator_opts['type'] must be explicit or implicit.")

    if integrator_type == "RK4":
        sim.solver_options.num_stages = 4
        sim.solver_options.num_steps = 1
    else:
        sim.solver_options.num_stages = integrator_opts["num_stages"]
        sim.solver_options.num_steps = integrator_opts["num_steps"]

    sim.solver_options.newton_iter = integrator_opts["newton_iter"]

    if integrator_opts["collocation_scheme"] == "radau":
        sim.solver_options.collocation_type = "GAUSS_RADAU_IIA"
    elif integrator_opts["collocation_scheme"] == "legendre":
        sim.solver_options.collocation_type = "GAUSS_LEGENDRE"
    else:
        raise Exception(
            "integrator_opts['collocation_scheme'] must be radau or legendre."
        )

    sim.solver_options.newton_tol = (
        integrator_opts["tol"] / integrator_opts["num_steps"]
    )
    sim.code_export_directory = f'c_generated_code_{model.name}_{sim.solver_options.integrator_type}'

    # create
    casados_integrator = CasadosIntegrator(sim, use_cython=use_cython, code_reuse=code_reuse)

    # if integrator_opts['type'] == 'implicit':
    #     casados_integrator.acados_integrator.set('xdot', np.zeros(casados_integrator.nx))

    return casados_integrator


def create_casadi_integrator(model, integrator_opts, dt=0.1):

    x = model.x
    u = model.u

    casadi_integrator = integrator(
        "casadi_integrator",
        "collocation",
        {"x": x, "p": u, "ode": model.f_expl_expr},
        {
            "tf": dt,
            "collocation_scheme": integrator_opts["collocation_scheme"],
            "number_of_finite_elements": integrator_opts["num_steps"],
            "interpolation_order": integrator_opts["num_stages"],
            "rootfinder_options": {"abstol": integrator_opts["tol"]},
        },
    )

    return casadi_integrator



def generate_butcher_tableu(n_s, irk_scheme):
    if irk_scheme == 'radau':
        order = 2*n_s - 1
        if n_s == 1:
            A = np.array([[1.0]])
            b = np.array([1.0])
            c = np.array([1.0])
        elif n_s == 2:
            A = np.array([[0.4166666666666666, -0.08333333333333334],
                    [0.75, 0.25]])
            b = np.array([0.75, 0.25])
            c = np.array([0.3333333333333334, 1])
        elif n_s == 3:
            A = np.array([[0.196815477223660, -0.065535425850198, 0.023770974348220, ],
                    [0.394424314739087, 0.292073411665228, -0.041548752125998, ],
                    [0.376403062700467, 0.512485826188421, 0.111111111111110, ],
                    ])
            b = np.array([0.376403062700467, 0.512485826188421, 0.111111111111110, ])
            c = np.array([0.155051025721682, 0.644948974278318, 1.000000000000000, ])

        elif n_s == 4:
            A = np.array([[0.112999479323157, -0.040309220723522, 0.025802377420337, -0.009904676507266, ],
            [0.234383995747400, 0.206892573935358, -0.047857128048540, 0.016047422806516, ],
            [0.216681784623251, 0.406123263867372, 0.189036518170056, -0.024182104899833, ],
            [0.220462211176769, 0.388193468843169, 0.328844319980059, 0.062500000000000, ],
            ])
            b = np.array([0.220462211176769, 0.388193468843169, 0.328844319980059, 0.062500000000000, ])
            c = np.array([0.088587959512704, 0.409466864440735, 0.787659461760847, 1.000000000000000, ])
        elif n_s == 5:
            A = np.array([[0.072998864317904, -0.026735331107946, 0.018676929763985, -0.012879106093307, 0.005042839233882, ],
            [0.153775231479183, 0.146214867847492, -0.036444568905127, 0.021233063119304, -0.007935579902729, ],
            [0.140063045684810, 0.298967129491284, 0.167585070135249, -0.033969101686618, 0.010944288744192, ],
            [0.144894308109535, 0.276500068760161, 0.325797922910417, 0.128756753254908, -0.015708917378806, ],
            [0.143713560791225, 0.281356015149471, 0.311826522975734, 0.223103901083569, 0.039999999999999, ],
            ])
            b = np.array([0.143713560791225, 0.281356015149471, 0.311826522975734, 0.223103901083569, 0.039999999999999, ])
            c = np.array([0.057104196114518, 0.276843013638124, 0.583590432368917, 0.860240135656219, 1.000000000000000, ])
        elif n_s == 6:
            A = np.array([[0.050950010994641, -0.018907306554292, 0.013686071433088, -0.010370038766046, 0.007360656396640, -0.002909536452562, ],
            [0.108221658919059, 0.106975519937331, -0.027539023355392, 0.017496747141228, -0.011653721891195, 0.004512237122577, ],
            [0.097779670092646, 0.223172250636896, 0.136314679273052, -0.029646965988196, 0.016358578843438, -0.006003402610448, ],
            [0.102122375612935, 0.202975957373093, 0.276399136380739, 0.131006023136051, -0.024876303199822, 0.007837084050643, ],
            [0.100331001384960, 0.210247308553335, 0.256085372050322, 0.253365934704577, 0.092430534335701, -0.010995236827731, ],
            [0.100794192626740, 0.208450667155965, 0.260463391594751, 0.242693594234513, 0.159820376610253, 0.027777777777780, ],
            ])
            b = np.array([0.100794192626740, 0.208450667155965, 0.260463391594751, 0.242693594234513, 0.159820376610253, 0.027777777777780, ])
            c = np.array([0.039809857051469, 0.198013417873608, 0.437974810247386, 0.695464273353636, 0.901464914201173, 1.000000000000000, ])
        elif n_s == 7:
            A = np.array([[0.037546264993922, -0.014039334556461, 0.010352789600743, -0.008158322540275, 0.006388413879535, -0.004602326779149, 0.001828942561471, ],
            [0.080147596515620, 0.081062063985891, -0.021237992120711, 0.014000291238817, -0.010234185730090, 0.007153465151364, -0.002812639372407, ],
            [0.072063846941883, 0.171068354983886, 0.109614564040073, -0.024619871728985, 0.014760377043950, -0.009575259396791, 0.003672678397138, ],
            [0.075705125819825, 0.154090155142168, 0.227107736673208, 0.117478187037015, -0.023810827153042, 0.012709985533668, -0.004608844281289, ],
            [0.073912342163194, 0.161355607615931, 0.206867241552146, 0.237007115342664, 0.103086793533791, -0.018854139152552, 0.005858900974893, ],
            [0.074705562059812, 0.158307223872441, 0.214153423267192, 0.219877847031825, 0.198752121680627, 0.069265501605543, -0.008116008197746, ],
            [0.074494235556031, 0.159102115733617, 0.212351889503054, 0.223554914507190, 0.190474936822056, 0.119613744612707, 0.020408163265273, ],
            ])
            b = np.array([0.074494235556031, 0.159102115733617, 0.212351889503054, 0.223554914507190, 0.190474936822056, 0.119613744612707, 0.020408163265273, ])
            c = np.array([0.029316427159785, 0.148078599668484, 0.336984690281154, 0.558671518771550, 0.769233862030055, 0.926945671319741, 1.000000000000000, ])
        elif n_s == 8:
            A = np.array([[0.028802823892618, -0.010821698052016, 0.008069010203852, -0.006493073596536, 0.005300041017295, -0.004223309650010, 0.003069413349141, -0.001223820725630, ],
            [0.061680826212951, 0.063307905435285, -0.016766167621301, 0.011276575963179, -0.008575400848083, 0.006607056898422, -0.004723817373992, 0.001872074494442, ],
            [0.055285563267235, 0.134572019854444, 0.088830181899131, -0.020322485837009, 0.012631022220424, -0.008970025754043, 0.006180900917007, -0.002417353782599, ],
            [0.058300686057541, 0.120477661477342, 0.186414284318503, 0.101430904157414, -0.021196196398552, 0.012247274295402, -0.007798637777912, 0.002970397539715, ],
            [0.056682008984804, 0.127043161483419, 0.168088370419389, 0.209202248763793, 0.099187005744731, -0.019275308810477, 0.010069646505077, -0.003621850204030, ],
            [0.057543032017261, 0.123740992239338, 0.175951552284005, 0.190819813746984, 0.199456888942931, 0.082437024757780, -0.014724795758206, 0.004534800032808, ],
            [0.057146971559293, 0.125220694738182, 0.172643313188367, 0.197414436139205, 0.185210784696057, 0.158621287474583, 0.053712487445948, -0.006232535779285, ],
            [0.057254407372170, 0.124823950664929, 0.173507397817925, 0.195786083725501, 0.188258772694223, 0.152065310323877, 0.092679077400701, 0.015624999999989, ],
            ])
            b = np.array([0.057254407372170, 0.124823950664929, 0.173507397817925, 0.195786083725501, 0.188258772694223, 0.152065310323877, 0.092679077400701, 0.015624999999989, ])
            c = np.array([0.022479386438713, 0.114679053160904, 0.265789822784590, 0.452846373669445, 0.647375282886830, 0.819759308263108, 0.943737439463077, 1.000000000000000, ])
        elif n_s == 9:
            A = np.array([[0.022788378793460, -0.008589639752939, 0.006451029176996, -0.005257528699750, 0.004388833809362, -0.003651215553691, 0.002940488213753, -0.002149274163883, 0.000858843324058, ],
            [0.048907952447500, 0.050702050480828, -0.013523807196021, 0.009209373774305, -0.007155713317537, 0.005747246699432, -0.004542582976394, 0.003288161681791, -0.001309073694109, ],
            [0.043742760091572, 0.108301892902740, 0.072919565937428, -0.016879877210016, 0.010704551844802, -0.007901946479239, 0.005991406942180, -0.004248024439987, 0.001678149806150, ],
            [0.046249237453949, 0.096560730726800, 0.154298769790035, 0.086719369303118, -0.018451639643615, 0.011036658729825, -0.007673280940271, 0.005228224999886, -0.002035905836478, ],
            [0.044834436586896, 0.102306849685959, 0.138217634192387, 0.181263934682107, 0.090433600599454, -0.018085063366811, 0.010193387903882, -0.006405265418863, 0.002427169938414, ],
            [0.045658755719302, 0.099145470489361, 0.145747040497213, 0.163648281233691, 0.185944587344693, 0.083613260231573, -0.015809936146070, 0.008138252693868, -0.002910469207819, ],
            [0.045200600187684, 0.100853706718908, 0.141942236794193, 0.171189471837806, 0.169783386170366, 0.167768291173161, 0.067079034322205, -0.011792230536457, 0.003609246288590, ],
            [0.045416516657269, 0.100060402446161, 0.143652840987215, 0.168019080978866, 0.175560768418563, 0.155886270451902, 0.128893913517004, 0.042810826024379, -0.004934574771255, ],
            [0.045357252461599, 0.100276649011903, 0.143193348179011, 0.168846983486219, 0.174136501388603, 0.158421887836084, 0.123594689101992, 0.073827009522574, 0.012345679012242, ],
            ])
            b = np.array([0.045357252461599, 0.100276649011903, 0.143193348179011, 0.168846983486219, 0.174136501388603, 0.158421887836084, 0.123594689101992, 0.073827009522574, 0.012345679012242, ])
            c = np.array([0.017779915147364, 0.091323607899794, 0.214308479395630, 0.371932164583272, 0.545186684803427, 0.713175242855570, 0.855633742957854, 0.955366044710030, 1.000000000000000, ])

        else:
            raise NotImplementedError()
    elif irk_scheme in  ['gauss-legendre', 'legendre']:
        order = 2*n_s
        if n_s == 1:
            A = np.array([[0.500000000000000, ],
            ])
            b = np.array([1.000000000000000, ])
            c = np.array([0.500000000000000, ])
        elif n_s == 2:
            A = np.array([[0.250000000000000, -0.038675134594813, ],
            [0.538675134594813, 0.250000000000000, ],
            ])
            b = np.array([0.500000000000000, 0.500000000000000, ])
            c = np.array([0.211324865405187, 0.788675134594813, ])
        elif n_s == 3:
            A = np.array([[0.138888888888889, -0.035976667524939, 0.009789444015308, ],
            [0.300263194980865, 0.222222222222222, -0.022485417203087, ],
            [0.267988333762469, 0.480421111969383, 0.138888888888889, ],
            ])
            b = np.array([0.277777777777778, 0.444444444444444, 0.277777777777778, ])
            c = np.array([0.112701665379258, 0.500000000000000, 0.887298334620742, ])
        elif n_s == 4:
            A = np.array([[0.086963711284363, -0.026604180084999, 0.012627462689405, -0.003555149685796, ],
            [0.188118117499868, 0.163036288715637, -0.027880428602471, 0.006735500594538, ],
            [0.167191921974189, 0.353953006033745, 0.163036288715636, -0.014190694931141, ],
            [0.177482572254522, 0.313445114741872, 0.352676757516270, 0.086963711284364, ],
            ])
            b = np.array([0.173927422568726, 0.326072577431278, 0.326072577431272, 0.173927422568728, ])
            c = np.array([0.069431844202974, 0.330009478207572, 0.669990521792428, 0.930568155797026, ])
        elif n_s == 5:
            A = np.array([[0.059231721264047, -0.019570364359076, 0.011254400818643, -0.005593793660812, 0.001588112967866, ],
            [0.128151005670045, 0.119657167624842, -0.024592114619642, 0.010318280670683, -0.002768994398770, ],
            [0.113776288004224, 0.260004651680642, 0.142222222222221, -0.020690316430958, 0.004687154523870, ],
            [0.121232436926862, 0.228996054578998, 0.309036559064083, 0.119657167624843, -0.009687563141950, ],
            [0.116875329560226, 0.244908128910493, 0.273190043625792, 0.258884699608764, 0.059231721264048, ],
            ])
            b = np.array([0.118463442528091, 0.239314335249677, 0.284444444444436, 0.239314335249684, 0.118463442528096, ])
            c = np.array([0.046910077030668, 0.230765344947159, 0.500000000000000, 0.769234655052841, 0.953089922969332, ])
        elif n_s == 6:
            A = np.array([[0.042831123094792, -0.014763725997197, 0.009325050706477, -0.005668858049483, 0.002854433315099, -0.000812780171265, ],
            [0.092673491430378, 0.090190393262035, -0.020300102293240, 0.010363156240247, -0.004887192928038, 0.001355561055485, ],
            [0.082247922612843, 0.196032162333246, 0.116978483643174, -0.020482527745657, 0.007989991899662, -0.002075625784866, ],
            [0.087737871974450, 0.172390794624414, 0.254439495032005, 0.116978483643169, -0.015651375809174, 0.003414323576741, ],
            [0.084306685134102, 0.185267979452117, 0.223593811046108, 0.254257069579578, 0.090190393262038, -0.007011245240795, ],
            [0.086475026360850, 0.177526353209002, 0.239625825335853, 0.224631916579851, 0.195144512521278, 0.042831123094790, ],
            ])
            b = np.array([0.085662246189586, 0.180380786524101, 0.233956967286350, 0.233956967286344, 0.180380786524064, 0.085662246189580, ])
            c = np.array([0.033765242898423, 0.169395306766867, 0.380690406958402, 0.619309593041598, 0.830604693233132, 0.966234757101576, ])
        elif n_s == 7:
            A = np.array([[0.032371241542217, -0.011451017283184, 0.007633203872423, -0.005133733563225, 0.003175058773686, -0.001606819037046, 0.000458109523749, ],
            [0.070043541378726, 0.069926347872320, -0.016590006578848, 0.009349622783444, -0.005397091931896, 0.002645843866730, -0.000743850190172, ],
            [0.062153935787349, 0.152005522057830, 0.095457512626279, -0.018375244215452, 0.008712562598475, -0.003953580158811, 0.001076715615628, ],
            [0.066332928617678, 0.133595769223878, 0.207701880765966, 0.104489795918363, -0.016786855513410, 0.006256926520753, -0.001590445533250, ],
            [0.063665767468791, 0.143806275903430, 0.182202462654061, 0.227354836052162, 0.095457512626282, -0.012152826313210, 0.002588547297082, ],
            [0.065486333274562, 0.137206851877894, 0.196312117184414, 0.199629969053189, 0.207505031831440, 0.069926347872274, -0.005301058294296, ],
            [0.064284373560617, 0.141459514781547, 0.187739966478872, 0.214113325399745, 0.183281821380140, 0.151303713027731, 0.032371241542209, ],
            ])
            b = np.array([0.064742483084360, 0.139852695744546, 0.190915025252464, 0.208979591836627, 0.190915025252578, 0.139852695744521, 0.064742483084429, ])
            c = np.array([0.025446043828620, 0.129234407200303, 0.297077424311301, 0.500000000000000, 0.702922575688699, 0.870765592799697, 0.974553956171379, ])
        elif n_s == 8:
            A = np.array([[0.025307134072594, -0.009105943305970, 0.006280831147030, -0.004483015613055, 0.003078491368327, -0.001917675254637, 0.000972757664059, -0.000277508327117, ],
            [0.054759321767554, 0.055595258613345, -0.013639796235782, 0.008149708858361, -0.005215352089147, 0.003139752985464, -0.001564934910949, 0.000442802304342, ],
            [0.048587535998913, 0.120859524997173, 0.078426661469471, -0.015975103361879, 0.008371732720226, -0.004643465862104, 0.002225714775285, -0.000618805695251, ],
            [0.051865520970582, 0.106193490148350, 0.170671134274548, 0.090670945844584, -0.016021041321030, 0.007241206561225, -0.003197814310362, 0.000859236584265, ],
            [0.049755031560927, 0.114388331537048, 0.149612116377682, 0.197362933010172, 0.090670945844598, -0.013817811335584, 0.004997027078331, -0.001251252825391, ],
            [0.051233073840447, 0.108964802451400, 0.161496788800919, 0.172970158968791, 0.197316995050984, 0.078426661469599, -0.009669007770489, 0.002026732146281, ],
            [0.050171465840885, 0.112755452137506, 0.153713569953126, 0.186557243777861, 0.173192182830976, 0.170493119175010, 0.055595258613351, -0.004145053622349, ],
            [0.050891776472231, 0.110217759562534, 0.158770998192800, 0.178263400320301, 0.185824907302086, 0.150572491792394, 0.120296460532602, 0.025307134072634, ],
            ])
            b = np.array([0.050614268145260, 0.111190517226596, 0.156853322938151, 0.181341891688295, 0.181341891689184, 0.156853322939500, 0.111190517226614, 0.050614268145245, ])
            c = np.array([0.019855071751232, 0.101666761293187, 0.237233795041836, 0.408282678752175, 0.591717321247825, 0.762766204958164, 0.898333238706813, 0.980144928248768, ])
        elif n_s == 9:
            A = np.array([[0.020318597090394, -0.007397868566149, 0.005222003592100, -0.003873451291745, 0.002831369450070, -0.001962194188391, 0.001226609788813, -0.000622964091649, 0.000177778462745, ],
            [0.043965527226529, 0.045162040173714, -0.011335464012335, 0.007034766801735, -0.004788276131017, 0.003203360151985, -0.001964405739953, 0.000987172103666, -0.000280274237641, ],
            [0.039008653396285, 0.098181511959848, 0.065152674100733, -0.013770833986609, 0.007664175624643, -0.004713586467799, 0.002770828892759, -0.001361671983073, 0.000382532112918, ],
            [0.041645087027326, 0.086255472772503, 0.141795216041138, 0.078086769260000, -0.014618957875909, 0.007300428262182, -0.003932839915038, 0.001852686200821, -0.000510573474928, ],
            [0.039940372869860, 0.092943372272725, 0.124257110410740, 0.170000445255294, 0.082559838750321, -0.013826906735218, 0.006048237790678, -0.002619291925299, 0.000696821310955, ],
            [0.041147767655826, 0.088471394146737, 0.134238188116171, 0.148873110258109, 0.179738635376310, 0.078086769260125, -0.011489867839813, 0.004068607574951, -0.001007892846527, ],
            [0.040254662068108, 0.091685752330989, 0.127534519308256, 0.160887124988221, 0.157455501875688, 0.169944372506848, 0.065152674100318, -0.007857431612422, 0.001628540784537, ],
            [0.040917468419025, 0.089336908244377, 0.132269753940591, 0.152970178368378, 0.169907953631991, 0.149138771718299, 0.141640812213154, 0.045162040173409, -0.003328333045658, ],
            [0.040459415718829, 0.090947044440327, 0.129078738411408, 0.158135732709525, 0.162288308049938, 0.160046989811690, 0.125083344608356, 0.097721948913431, 0.020318597090466, ],
            ])
            b = np.array([0.040637194181613, 0.090324080348182, 0.130305348199727, 0.156173538521216, 0.165119677500115, 0.156173538521216, 0.130305348200636, 0.090324080347500, 0.040637194181045, ])
            c = np.array([0.015919880246187, 0.081984446336682, 0.193314283649705, 0.337873288298095, 0.500000000000000, 0.662126711701905, 0.806685716350295, 0.918015553663318, 0.984080119753813, ])

    else:
        raise NotImplementedError()
    return A, b, c, order